{"paragraphs":[{"text":"%spark\nspark.sparkContext.getConf.getAll.foreach(println)","user":"anonymous","dateUpdated":"2021-05-08T21:08:09+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1611670681478_-627488479","id":"20210126-141801_302354421","dateCreated":"2021-01-26T14:18:01+0000","dateStarted":"2021-05-08T21:08:09+0000","dateFinished":"2021-05-08T21:08:12+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:6139"},{"text":"%md\nLoad File From Local File System","user":"anonymous","dateUpdated":"2021-05-05T00:32:46+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1611670703688_588486914","id":"20210126-141823_774896655","dateCreated":"2021-01-26T14:18:23+0000","dateStarted":"2021-05-05T00:32:46+0000","dateFinished":"2021-05-05T00:32:48+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:6140"},{"text":"%spark\n\nimport spark.implicits._\nimport org.apache.spark.sql._\nimport org.apache.spark.sql.functions._\nimport org.apache.spark.sql.types._\nimport org.apache.spark.sql.expressions.UserDefinedFunction\nimport org.apache.spark.sql.expressions.Window\n// import org.apache.spark.sql.functions.udf\n// import org.apache.spark.sql.functions.when","user":"anonymous","dateUpdated":"2021-05-10T01:21:49+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1611670714885_331091405","id":"20210126-141834_1767360755","dateCreated":"2021-01-26T14:18:34+0000","dateStarted":"2021-05-10T01:21:49+0000","dateFinished":"2021-05-10T01:22:26+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6141","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import spark.implicits._\nimport org.apache.spark.sql._\nimport org.apache.spark.sql.functions._\nimport org.apache.spark.sql.types._\nimport org.apache.spark.sql.expressions.UserDefinedFunction\nimport org.apache.spark.sql.expressions.Window\n"}]}},{"text":"%spark\n// File Locations on the docker image can we read using these path.\nval BaseFilePath = \"file:///learn\"\nval InputFolder = \"/inputs/\"\nval KoyfinSymbologyServiceInputFileKoyfinSymbologyServiceInputFile = \"koyfinSymbologyService.json\"\nval feedFiles =  \"/feed files/*\"\nval singleFeedFile = \"/feed files/performance_inc_20191219.json\"\n\n// Elastic search config\nval esNodes = \"172.18.0.4\"\nval esPort = \"9200\"\nvar esconf = Map(\"es.nodes\" -> esNodes, \"spark.es.port\" -> esPort)\n\n//Elastic search indices - improvemet create explicit mappings and not auto create with generic /docs\nval kUnAdjPriceIndex = \"koyfin_unadjusted_price/docs\"\nval kAdjPriceIndex = \"koyfin_adjusted_price/docs\"","user":"anonymous","dateUpdated":"2021-05-10T01:23:25+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1620601913445_1627749750","id":"20210509-231153_1093447067","dateCreated":"2021-05-09T23:11:53+0000","dateStarted":"2021-05-10T01:23:25+0000","dateFinished":"2021-05-10T01:23:39+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6142","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"BaseFilePath: String = file:///learn\nInputFolder: String = /inputs/\nKoyfinSymbologyServiceInputFileKoyfinSymbologyServiceInputFile: String = koyfinSymbologyService.json\nfeedFiles: String = /feed files/*\nsingleFeedFile: String = /feed files/performance_inc_20191219.json\nesNodes: String = 172.18.0.4\nesPort: String = 9200\nesconf: scala.collection.immutable.Map[String,String] = Map(es.nodes -> 172.18.0.4, spark.es.port -> 9200)\nkUnAdjPriceIndex: String = koyfin_unadjusted_price/docs\nkAdjPriceIndex: String = koyfin_adjusted_price/docs\n"}]}},{"text":"%spark\ncase class PData(adjustmentFactor: Double, assetId: Int, date: String, nav: Double)","user":"anonymous","dateUpdated":"2021-05-10T01:37:37+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1620248305064_504250545","id":"20210505-205825_498778732","dateCreated":"2021-05-05T20:58:25+0000","dateStarted":"2021-05-10T01:23:17+0000","dateFinished":"2021-05-10T01:23:18+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6143","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"defined class PData\n"}]}},{"text":"%spark\n// Should use long and then handle the cents (add the decimal place). For purposes of displaying will store the value as a double.\n// Two quick ideas: 1. use big decimal  = slow performance or 1. use your own fancy math = fastest but needs the most testing or 3. use long type then fold (add decimal places). You can treat money as a number with no decimals.\n\n\n//UDFS\nval calculateAdjustedPrice = udf((nav: Double, adjFactor: Double, maxAdjFactor: Double ) => {(nav * adjFactor) / maxAdjFactor})","user":"anonymous","dateUpdated":"2021-05-10T01:23:21+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1620226057592_1275044401","id":"20210505-144737_979428669","dateCreated":"2021-05-05T14:47:37+0000","dateStarted":"2021-05-10T01:23:22+0000","dateFinished":"2021-05-10T01:23:30+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6144","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"calculateAdjustedPrice: org.apache.spark.sql.expressions.UserDefinedFunction = UserDefinedFunction(<function3>,DoubleType,Some(List(DoubleType, DoubleType, DoubleType)))\n"}]}},{"text":"%spark\nval rawUnadjustedPriceDF = spark.read.json(BaseFilePath + InputFolder + feedFiles)\n// rawUnadjustedPriceDF.show()","user":"anonymous","dateUpdated":"2021-05-10T01:37:57+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1611670758436_1200768438","id":"20210126-141918_1373929681","dateCreated":"2021-01-26T14:19:18+0000","dateStarted":"2021-05-10T01:25:42+0000","dateFinished":"2021-05-10T01:26:02+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6145","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- adjustmentFactor: string (nullable = true)\n |-- assetId: long (nullable = true)\n |-- date: string (nullable = true)\n |-- nav: string (nullable = true)\n\nrawUnadjustedPriceDF: org.apache.spark.sql.DataFrame = [adjustmentFactor: string, assetId: bigint ... 2 more fields]\n"}]}},{"text":"%spark\n//Should focus on strongly typed data and managing nulls where present. Should also use the dataset api as much as possible.\n\nval unAdjustedPriceDF = rawUnadjustedPriceDF.withColumn(\"adjustmentFactor\",col(\"adjustmentFactor\").cast(DoubleType))\n    .withColumn(\"assetId\",col(\"assetId\").cast(IntegerType))\n    .withColumn(\"nav\",col(\"nav\").cast(DoubleType))\n    .as[PData]\n                                              \n// unAdjustedPriceDF.printSchema()\n// unAdjustedPriceDF.show()\n","user":"anonymous","dateUpdated":"2021-05-10T01:38:05+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1620224500451_-170958272","id":"20210505-142140_1408598716","dateCreated":"2021-05-05T14:21:40+0000","dateStarted":"2021-05-10T01:30:26+0000","dateFinished":"2021-05-10T01:30:37+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6148","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- adjustmentFactor: double (nullable = true)\n |-- assetId: integer (nullable = true)\n |-- date: string (nullable = true)\n |-- nav: double (nullable = true)\n\n+----------------+-------+----------+-----+\n|adjustmentFactor|assetId|      date|  nav|\n+----------------+-------+----------+-----+\n|10.0449181987999|4000123|2019-12-27|18.46|\n|9.96288362069999|4000123|2019-12-20| 18.5|\n|   10.5929664087|4000123|2020-04-08|12.72|\n|            null|4000123|2019-12-23|18.67|\n|            null|4000123|2019-12-26|18.57|\n|            null|4000123|2019-12-30|18.41|\n|            null|4000123|2019-12-31|18.34|\n|            null|4000123|2020-01-02|18.77|\n|            null|4000123|2020-01-03|19.07|\n|            null|4000123|2020-01-06|19.16|\n|            null|4000123|2020-01-08|19.13|\n|            null|4000123|2020-01-09|19.32|\n|            null|4000123|2020-01-10|19.16|\n|            null|4000123|2020-01-13|19.34|\n|            null|4000123|2020-01-14|19.29|\n|            null|4000123|2020-01-15|19.38|\n|            null|4000123|2020-01-16|19.43|\n|            null|4000123|2020-01-17|19.34|\n|            null|4000123|2020-01-21|19.28|\n|            null|4000123|2020-01-22|19.15|\n+----------------+-------+----------+-----+\nonly showing top 20 rows\n\nunAdjustedPriceDF: org.apache.spark.sql.Dataset[PData] = [adjustmentFactor: double, assetId: int ... 2 more fields]\n"}]}},{"text":"%spark\nval kSymbolDF = spark.read.option(\"multiline\", true).json(BaseFilePath + InputFolder + KoyfinSymbologyServiceInputFile)\nval kUnAdjDF = unAdjustedPriceDF.join(kSymbolDF, kSymbolDF(\"acmeAssetID\") === unAdjustedPriceDF(\"assetId\"), \"left\").drop(\"acmeAssetID\")\n\n// kUnAdjDF.show()","user":"anonymous","dateUpdated":"2021-05-10T01:38:16+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1620610111297_975845017","id":"20210510-012831_1187862079","dateCreated":"2021-05-10T01:28:31+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:8303","dateFinished":"2021-05-10T01:31:35+0000","dateStarted":"2021-05-10T01:31:22+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+----------------+-------+----------+-----+-----------+---------+---------------+------+\n|adjustmentFactor|assetId|      date|  nav|       ISIN|      KID|qualifiedTicker|ticker|\n+----------------+-------+----------+-----+-----------+---------+---------------+------+\n|10.0449181987999|4000123|2019-12-27|18.46|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|\n|9.96288362069999|4000123|2019-12-20| 18.5|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|\n|   10.5929664087|4000123|2020-04-08|12.72|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|\n|            null|4000123|2019-12-23|18.67|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|\n|            null|4000123|2019-12-26|18.57|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|\n|            null|4000123|2019-12-30|18.41|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|\n|            null|4000123|2019-12-31|18.34|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|\n|            null|4000123|2020-01-02|18.77|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|\n|            null|4000123|2020-01-03|19.07|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|\n|            null|4000123|2020-01-06|19.16|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|\n|            null|4000123|2020-01-08|19.13|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|\n|            null|4000123|2020-01-09|19.32|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|\n|            null|4000123|2020-01-10|19.16|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|\n|            null|4000123|2020-01-13|19.34|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|\n|            null|4000123|2020-01-14|19.29|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|\n|            null|4000123|2020-01-15|19.38|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|\n|            null|4000123|2020-01-16|19.43|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|\n|            null|4000123|2020-01-17|19.34|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|\n|            null|4000123|2020-01-21|19.28|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|\n|            null|4000123|2020-01-22|19.15|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|\n+----------------+-------+----------+-----+-----------+---------+---------------+------+\nonly showing top 20 rows\n\nkSymbolDF: org.apache.spark.sql.DataFrame = [ISIN: string, KID: string ... 3 more fields]\nkUnAdjDF: org.apache.spark.sql.DataFrame = [adjustmentFactor: double, assetId: int ... 6 more fields]\n"}]}},{"text":"%spark\n// write unadjusted price to elasticsearch\nkUnAdjDF.saveToEs(kUnAdjPriceIndex, esconf)","user":"anonymous","dateUpdated":"2021-05-10T01:41:27+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1620610364880_611175614","id":"20210510-013244_1938787222","dateCreated":"2021-05-10T01:32:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:8457","dateFinished":"2021-05-10T01:41:41+0000","dateStarted":"2021-05-10T01:41:27+0000","results":{"code":"SUCCESS","msg":[]}},{"text":"%spark\n\n// Find adjFactory(max(t))\n\nval window = Window.partitionBy(\"assetId\").orderBy(\"date\")\nval addMaxFactorDF = kUnAdjDF.withColumn(\"maxAdjFactor\", max(\"adjustmentFactor\") over window)\n\n// Fill nulls \nval filledMaxFactorDF = addMaxFactorDF.withColumn(\"adjustmentFactor\", when(col(\"adjustmentFactor\").isNull, col(\"maxAdjFactor\")).otherwise(col(\"maxAdjFactor\")))\n\n// would normally combine but want to show the steps.\nval adjPriceDF = filledMaxFactorDF.withColumn(\"adjustedPrice\", calculateAdjustedPrice(col(\"nav\"), col(\"adjustmentFactor\"), col(\"maxAdjFactor\")))\n\n\n// addMaxFactorDF.show\n// filledMaxFactorDF.show\n// adjPriceDF.show\n\n","user":"anonymous","dateUpdated":"2021-05-10T01:36:35+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1620603883322_-1152373157","id":"20210509-234443_1717825249","dateCreated":"2021-05-09T23:44:43+0000","dateStarted":"2021-05-10T01:33:30+0000","dateFinished":"2021-05-10T01:33:57+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6150","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+----------------+-------+----------+-----+-----------+---------+---------------+------+----------------+\n|adjustmentFactor|assetId|      date|  nav|       ISIN|      KID|qualifiedTicker|ticker|    maxAdjFactor|\n+----------------+-------+----------+-----+-----------+---------+---------------+------+----------------+\n|9.96288362069999|4000123|2019-12-20| 18.5|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|9.96288362069999|\n|            null|4000123|2019-12-23|18.67|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|9.96288362069999|\n|            null|4000123|2019-12-24| 18.6|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|9.96288362069999|\n|            null|4000123|2019-12-26|18.57|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|9.96288362069999|\n|10.0449181987999|4000123|2019-12-27|18.46|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|10.0449181987999|\n|            null|4000123|2019-12-30|18.41|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|10.0449181987999|\n|            null|4000123|2019-12-31|18.34|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|10.0449181987999|\n|            null|4000123|2020-01-02|18.77|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|10.0449181987999|\n|            null|4000123|2020-01-03|19.07|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|10.0449181987999|\n|            null|4000123|2020-01-06|19.16|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|10.0449181987999|\n|            null|4000123|2020-01-07| 19.2|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|10.0449181987999|\n|            null|4000123|2020-01-08|19.13|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|10.0449181987999|\n|            null|4000123|2020-01-09|19.32|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|10.0449181987999|\n|            null|4000123|2020-01-10|19.16|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|10.0449181987999|\n|            null|4000123|2020-01-13|19.34|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|10.0449181987999|\n|            null|4000123|2020-01-14|19.29|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|10.0449181987999|\n|            null|4000123|2020-01-15|19.38|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|10.0449181987999|\n|            null|4000123|2020-01-16|19.43|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|10.0449181987999|\n|            null|4000123|2020-01-17|19.34|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|10.0449181987999|\n|            null|4000123|2020-01-21|19.28|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|10.0449181987999|\n+----------------+-------+----------+-----+-----------+---------+---------------+------+----------------+\nonly showing top 20 rows\n\n+----------------+-------+----------+-----+-----------+---------+---------------+------+----------------+\n|adjustmentFactor|assetId|      date|  nav|       ISIN|      KID|qualifiedTicker|ticker|    maxAdjFactor|\n+----------------+-------+----------+-----+-----------+---------+---------------+------+----------------+\n|9.96288362069999|4000123|2019-12-20| 18.5|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|9.96288362069999|\n|9.96288362069999|4000123|2019-12-23|18.67|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|9.96288362069999|\n|9.96288362069999|4000123|2019-12-24| 18.6|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|9.96288362069999|\n|9.96288362069999|4000123|2019-12-26|18.57|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|9.96288362069999|\n|10.0449181987999|4000123|2019-12-27|18.46|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|10.0449181987999|\n|10.0449181987999|4000123|2019-12-30|18.41|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|10.0449181987999|\n|10.0449181987999|4000123|2019-12-31|18.34|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|10.0449181987999|\n|10.0449181987999|4000123|2020-01-02|18.77|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|10.0449181987999|\n|10.0449181987999|4000123|2020-01-03|19.07|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|10.0449181987999|\n|10.0449181987999|4000123|2020-01-06|19.16|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|10.0449181987999|\n|10.0449181987999|4000123|2020-01-07| 19.2|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|10.0449181987999|\n|10.0449181987999|4000123|2020-01-08|19.13|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|10.0449181987999|\n|10.0449181987999|4000123|2020-01-09|19.32|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|10.0449181987999|\n|10.0449181987999|4000123|2020-01-10|19.16|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|10.0449181987999|\n|10.0449181987999|4000123|2020-01-13|19.34|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|10.0449181987999|\n|10.0449181987999|4000123|2020-01-14|19.29|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|10.0449181987999|\n|10.0449181987999|4000123|2020-01-15|19.38|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|10.0449181987999|\n|10.0449181987999|4000123|2020-01-16|19.43|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|10.0449181987999|\n|10.0449181987999|4000123|2020-01-17|19.34|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|10.0449181987999|\n|10.0449181987999|4000123|2020-01-21|19.28|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|10.0449181987999|\n+----------------+-------+----------+-----+-----------+---------+---------------+------+----------------+\nonly showing top 20 rows\n\n+----------------+-------+----------+-----+-----------+---------+---------------+------+----------------+-------------+\n|adjustmentFactor|assetId|      date|  nav|       ISIN|      KID|qualifiedTicker|ticker|    maxAdjFactor|adjustedPrice|\n+----------------+-------+----------+-----+-----------+---------+---------------+------+----------------+-------------+\n|9.96288362069999|4000123|2019-12-20| 18.5|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|9.96288362069999|         18.5|\n|9.96288362069999|4000123|2019-12-23|18.67|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|9.96288362069999|        18.67|\n|9.96288362069999|4000123|2019-12-24| 18.6|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|9.96288362069999|         18.6|\n|9.96288362069999|4000123|2019-12-26|18.57|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|9.96288362069999|        18.57|\n|10.0449181987999|4000123|2019-12-27|18.46|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|10.0449181987999|        18.46|\n|10.0449181987999|4000123|2019-12-30|18.41|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|10.0449181987999|        18.41|\n|10.0449181987999|4000123|2019-12-31|18.34|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|10.0449181987999|        18.34|\n|10.0449181987999|4000123|2020-01-02|18.77|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|10.0449181987999|        18.77|\n|10.0449181987999|4000123|2020-01-03|19.07|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|10.0449181987999|        19.07|\n|10.0449181987999|4000123|2020-01-06|19.16|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|10.0449181987999|        19.16|\n|10.0449181987999|4000123|2020-01-07| 19.2|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|10.0449181987999|         19.2|\n|10.0449181987999|4000123|2020-01-08|19.13|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|10.0449181987999|        19.13|\n|10.0449181987999|4000123|2020-01-09|19.32|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|10.0449181987999|        19.32|\n|10.0449181987999|4000123|2020-01-10|19.16|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|10.0449181987999|        19.16|\n|10.0449181987999|4000123|2020-01-13|19.34|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|10.0449181987999|        19.34|\n|10.0449181987999|4000123|2020-01-14|19.29|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|10.0449181987999|        19.29|\n|10.0449181987999|4000123|2020-01-15|19.38|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|10.0449181987999|        19.38|\n|10.0449181987999|4000123|2020-01-16|19.43|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|10.0449181987999|        19.43|\n|10.0449181987999|4000123|2020-01-17|19.34|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|10.0449181987999|        19.34|\n|10.0449181987999|4000123|2020-01-21|19.28|UA123456789|mf-5s7ebl|       LALDX:US| LALDX|10.0449181987999|        19.28|\n+----------------+-------+----------+-----+-----------+---------+---------------+------+----------------+-------------+\nonly showing top 20 rows\n\nwindow: org.apache.spark.sql.expressions.WindowSpec = org.apache.spark.sql.expressions.WindowSpec@1bf757d7\naddMaxFactorDF: org.apache.spark.sql.DataFrame = [adjustmentFactor: double, assetId: int ... 7 more fields]\nfilledMaxFactorDF: org.apache.spark.sql.DataFrame = [adjustmentFactor: double, assetId: int ... 7 more fields]\nadjPriceDF: org.apache.spark.sql.DataFrame = [adjustmentFactor: double, assetId: int ... 8 more fields]\n"}]}},{"text":"%spark\n// write adjusted price to elasticsearch\nadjPriceDF.saveToEs(kAdjPriceIndex, esconf)","user":"anonymous","dateUpdated":"2021-05-10T01:43:46+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1620610461193_-1451951852","id":"20210510-013421_222918057","dateCreated":"2021-05-10T01:34:21+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:8556","dateFinished":"2021-05-10T01:44:07+0000","dateStarted":"2021-05-10T01:43:46+0000","results":{"code":"SUCCESS","msg":[]}},{"text":"%spark\n\n//Test write to Reddis. Could use if faster than querying elasticsearch. Just store the last adjusted factor or the whole dataframe.\nkUnAdjDF.write\n  .format(\"org.apache.spark.sql.redis\")\n  .option(\"table\", \"unadjustedprice\")\n  .save()\n","user":"anonymous","dateUpdated":"2021-05-10T01:46:31+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1620509849772_-793530961","id":"20210508-213729_49523320","dateCreated":"2021-05-08T21:37:29+0000","dateStarted":"2021-05-10T01:46:31+0000","dateFinished":"2021-05-10T01:46:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6159","results":{"code":"SUCCESS","msg":[]}},{"text":"%spark\nadjPriceDF.write\n  .format(\"org.apache.spark.sql.redis\")\n  .option(\"table\", \"adjustedprice\")\n  .save()","user":"anonymous","dateUpdated":"2021-05-10T01:46:35+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1620611141575_1381003450","id":"20210510-014541_712835799","dateCreated":"2021-05-10T01:45:41+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:8775","dateFinished":"2021-05-10T01:47:00+0000","dateStarted":"2021-05-10T01:46:35+0000","results":{"code":"SUCCESS","msg":[]}},{"text":"%spark\n","user":"anonymous","dateUpdated":"2021-05-10T01:46:35+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1620611195072_-766062051","id":"20210510-014635_1538655791","dateCreated":"2021-05-10T01:46:35+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:8856"}],"name":"Primer","id":"2FVXKGG2N","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"sh:shared_process":[],"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}